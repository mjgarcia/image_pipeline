<!-- Example launch file for stereo image processing node -->

<launch>
  <!-- stereo processing parameters
       texture_thresh:  Threshold for removing bad disparities based on texture
                        Default value: 30
       unique_thresh:   Threshold for removing bad disparities based on ambiguity
                        Default value: 36
       speckle_diff:    Threshold for region-growing (1/16 pixel disparity)
                        Default value: 10
       speckle_size:    Threshold for disparity region size (pixels)
                        Default value: 100
       horopter:        X offset for close-in stereo (pixels)
                        Default value: 0
       corr_size:       Correlation window size (pixels)
                        Default value: 15
       num_disp:        Number of disparities (pixels)
                        Default value: 64
       -->

  <!--
      In the common case, we need only start stereo_image_proc inside the stereo namespace. In
      this example, we assume the two camera drivers are publishing in my_stereo_cam/left/ and
      my_stereo_cam/right/.
    -->
  <node ns="my_stereo_cam" name="my_stereo_proc" pkg="stereo_image_proc" type="stereo_image_proc">
    <!-- Set local parameters to control stereo processing -->
    <param name="num_disp" type="int" value="128"/>
  </node>

  <!--
      A more complicated case: using two arbitrary cameras as a stereo pair. In this example, we
      assume the two camera drivers are publishing in left_camera/ and right_camera/. Our 3d outputs
      are published in the namespace containing the node.
    -->
  <node name="arbitrary_stereo_proc" pkg="stereo_image_proc" type="stereo_image_proc">
    <remap from="left" to="left_camera"/>
    <remap from="right" to="right_camera"/>
  </node>

</launch>
